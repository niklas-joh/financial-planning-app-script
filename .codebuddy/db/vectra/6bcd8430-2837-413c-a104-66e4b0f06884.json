{"chunk":16,"numChunks":25,"fileHash":"NFeCXCcs54GgVRSaoZ7YUMS8I/hASRpntpW0s0paeLI=","filePath":"src/tests/cache-service.test.js","content":"/**\n(function() {\n   const TestCacheService = (function(config) {\n        return {\n            },\n            put: function(key, value, expirySeconds) {\n                if (!isCacheEnabled()) return;\n                \n                if (expirySeconds === undefined) {\n                    expirySeconds = getDefaultExpirySeconds();\n                }\n                \n                const namespacedKey = generateNamespacedKey(key);\n                \n                memoryCache[namespacedKey] = {\n                    value: value,\n                    expiry: Date.now() + (expirySeconds * 1000)\n                };\n                \n                try {\n                    const cache = CacheService.getScriptCache();\n                    cache.put(namespacedKey, JSON.stringify(value), expirySeconds);\n                } catch (error) {\n                    console.warn(`Failed to put value in cache for key ${key}:`, error);\n                }\n            },\n            invalidate: function(key) {\n                if (!isCacheEnabled()) return;\n                const namespacedKey = generateNamespacedKey(key);\n                delete memoryCache[namespacedKey];\n                try {\n                    const cache = CacheService.getScriptCache();\n                    cache.remove(namespacedKey);\n                } catch (error) {\n                    console.warn(`Failed to invalidate cache for key ${key}:`, error);\n                }\n            },\n            invalidateByPrefix: function(prefix) {\n                if (!isCacheEnabled()) return;\n                const namespacedPrefix = generateNamespacedKey(prefix);\n                Object.keys(memoryCache).forEach(key => {\n                    if (key.startsWith(namespacedPrefix)) {\n                    delete memoryCache[key];\n                    }\n                });\n                // Script cache invalidation by prefix is not directly supported by mock/GAS CacheService\n            },"}