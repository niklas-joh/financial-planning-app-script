{"chunk":13,"numChunks":20,"fileHash":"o9TH+WxWjuhYMssoSmFWfKxIkklvisnvxWTURfiVSIQ=","filePath":"cline/clasp-verify/src/services/monthly_spending_report.js","content":"/**\nFinancialPlanner.MonthlySpendingReport = (function(utils, uiService, errorService, config) {\n  function createMonthlySpendingReport() {\n    if (dateColIndex < 0 || typeColIndex < 0 || categoryColIndex < 0 || amountColIndex < 0) {\n      throw errorService.create(\"Could not find required columns in Transaction sheet\", { severity: \"high\" });\n    }\n    // Filter transactions for current month\n    const currentMonthTransactions = transactionData.filter((row, index) => {\n      if (index === 0) return false; // Skip header\n      \n      const date = new Date(row[dateColIndex]);\n      return date.getMonth() === currentMonth && date.getFullYear() === currentYear;\n    });\n    // Group by category and sub-category\n    const categoryData = {};\n    let totalExpenses = 0;\n    currentMonthTransactions.forEach(row => {\n      const type = row[typeColIndex];\n      // Only include expenses\n      if (type !== \"Expenses\" && type !== \"Wants/Pleasure\" && type !== \"Extra\") return;\n      \n      const category = row[categoryColIndex];\n      const subcategory = row[subcategoryColIndex] || \"(None)\";\n      const amount = Math.abs(parseFloat(row[amountColIndex]) || 0);\n      \n      if (!categoryData[category]) {\n        categoryData[category] = {};\n      }\n      \n      if (!categoryData[category][subcategory]) {\n        categoryData[category][subcategory] = 0;\n      }\n      \n      categoryData[category][subcategory] += amount;\n      totalExpenses += amount;\n    });\n    // --- Batch Write Data ---\n    const reportData = []; // Array to hold all row data for batch write\n    const formatInfo = []; // Array to hold info for formatting after batch write\n    let currentRowIndex = 4; // Start after headers"}