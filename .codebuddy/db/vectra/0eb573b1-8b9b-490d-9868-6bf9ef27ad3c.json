{"chunk":4,"numChunks":10,"fileHash":"qKty2YPjJfk9NdZZT+Kl8Aescdwa/V3Jg8MhLZ7cQWs=","filePath":"src/tests/ui-service.test.js","content":"/**\n(function() {\n  const mockHtmlOutput = {\n      _title: null,\n      _content: null,\n      _width: 0,\n      _height: 0,\n      setTitle: function(title) { this._title = title; return this; },\n      setWidth: function(width) { this._width = width; return this; },\n      setHeight: function(height) { this._height = height; return this; },\n      // Add other methods if needed by UIService\n  };\n  // Global mocks\n  global.SpreadsheetApp = {\n    getActiveSpreadsheet: function() {\n      return {\n        toast: function(message, title, timeoutSeconds) {\n          lastToast = { message: message, title: title, timeout: timeoutSeconds };\n        }\n      };\n    },\n    getUi: function() { return mockUi; }\n  };\n  global.HtmlService = {\n      createHtmlOutput: function(content) {\n          // Return a new mock instance each time\n          return Object.assign({}, mockHtmlOutput, { _content: content });\n      }\n  };\n  global.Charts = { // Mock if Charts enum is used (e.g., in future chart service tests)\n      ChartType: { PIE: 'PIE', COLUMN: 'COLUMN' } \n  };\n  global.Session = { // Mock if Session is used (e.g., for time zone)\n      getScriptTimeZone: function() { return \"Etc/GMT\"; } \n  };\n  global.Utilities = { // Mock if Utilities is used (e.g., formatDate)\n      formatDate: function(date, tz, format) { return `Formatted:${date.toISOString()}`; }\n  };"}