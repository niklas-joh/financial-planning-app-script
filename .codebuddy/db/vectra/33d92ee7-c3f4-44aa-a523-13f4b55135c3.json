{"chunk":1,"numChunks":12,"fileHash":"wOxdP/KdhRlqVhqR1qynAh8Mc6EDPjH2xoG2aXwD9E0=","filePath":"gh/refactoring-plan.md","content":"FinancialPlanner.Config = (function() {\n  // Default configuration\n  const DEFAULT_CONFIG = {\n    SHEETS: {\n      OVERVIEW: \"Overview\",\n      TRANSACTIONS: \"Transactions\",\n      SETTINGS: \"Settings\",\n      ANALYSIS: \"Analysis\"\n    },\n    TRANSACTION_TYPES: {\n      INCOME: \"Income\",\n      ESSENTIALS: \"Essentials\",\n      WANTS: \"Wants/Pleasure\",\n      EXTRA: \"Extra\", \n      SAVINGS: \"Savings\"\n    },\n    // More configuration...\n  };\n  \n  return {\n    get: function() {\n      return DEFAULT_CONFIG;\n    },\n    getSheetNames: function() {\n      return DEFAULT_CONFIG.SHEETS;\n    }\n    // More getter methods\n  };\n})();\n```\n\n### 2.2 Implement Settings Service\n\nEnhance the existing settings functionality into a proper service:\n\n```javascript\nFinancialPlanner.SettingsService = (function(config) {\n  // Private methods\n  function getSettingsSheet() {\n    const ss = SpreadsheetApp.getActiveSpreadsheet();\n    let sheet = ss.getSheetByName(config.get().SHEETS.SETTINGS);\n    \n    if (!sheet) {\n      sheet = ss.insertSheet(config.get().SHEETS.SETTINGS);\n      sheet.getRange(\"A1:B1\").setValues([[\"Preference\", \"Value\"]]);\n      sheet.getRange(\"A1:B1\").setFontWeight(\"bold\");\n      sheet.hideSheet();\n    }\n    \n    return sheet;\n  }\n  \n  // Public API\n  return {\n    getValue: function(key, defaultValue) {\n      // Implementation\n    },\n    setValue: function(key, value) {\n      // Implementation\n    },\n    toggleShowSubCategories: function() {\n      // Implementation\n    }\n  };\n})(FinancialPlanner.Config);\n```\n\n## 3. Utility Functions and Common Services\n\n### 3.1 Refactor Common Utilities\n\nConvert the common.js functions into a structured Utils module:\n\n```javascript\nFinancialPlanner.Utils = (function() {\n  return {\n"}