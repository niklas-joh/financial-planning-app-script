{"chunk":20,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  function addCategoryRows(sheet, combinations, rowIndex, type, columnIndices) {\n    for (let i = 0; i < combinations.length; i++) {\n      const combo = combinations[i];\n      const currentRow = startRow + i;\n      // Prepare formulas for all months (columns 5-16)\n      const rowFormulas = [];\n      for (let monthCol = 5; monthCol <= 16; monthCol++) {\n        const monthDate = new Date(2024, monthCol - 5, 1); // Adjusted for month column offset\n        \n        const formulaParams = {\n          type: combo.type,\n          category: combo.category,\n          subcategory: combo.subcategory,\n          monthDate: monthDate,\n          sheetName: sheetNames.TRANSACTIONS,\n          typeCol: columnIndices.type + 1,\n          categoryCol: columnIndices.category + 1,\n          subcategoryCol: columnIndices.subcategory + 1,\n          dateCol: columnIndices.date + 1,\n          amountCol: columnIndices.amount + 1,\n          sharedCol: columnIndices.shared + 1\n        };\n        \n        rowFormulas.push(buildMonthlySumFormula(formulaParams));\n      }\n      // Add formula for each month column\n      if (config.getSection('PERFORMANCE').USE_BATCH_OPERATIONS) {\n        // Apply in batches for better performance\n        sheet.getRange(currentRow, 5, 1, 12).setFormulas([rowFormulas]);\n      } else {\n        // Apply individually if batch operations disabled\n        for (let monthCol = 0; monthCol < 12; monthCol++) {\n          sheet.getRange(currentRow, monthCol + 5).setFormula(rowFormulas[month"}