{"chunk":34,"numChunks":54,"fileHash":"vN+W2tDiA59Daq+vJZZ4NvNU8baK6mDpzqFA2kTr3NY=","filePath":"cline/clasp-verify/src/services/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(utils, uiService, errorService, config) {\n  class FinancialAnalysisService {\n    addExpenseCategoriesSection(startRow) {\n      // Add Expense Categories header\n      this.analysisSheet.getRange(startRow, 1).setValue(\"Expense Categories\");\n      this.analysisSheet.getRange(startRow, 1, 1, 6)\n        .setBackground(this.config.COLORS.UI.HEADER_BG)\n        .setFontWeight(\"bold\")\n        .setFontColor(this.config.COLORS.UI.HEADER_FONT)\n        .setHorizontalAlignment(\"center\");\n      startRow++;\n      // Add headers\n      this.analysisSheet.getRange(startRow, 1, 1, 6)\n        .setValues([[\"Category\", \"Type\", \"Amount\", \"% of Income\", \"Target %\", \"Variance\"]])\n        .setBackground(\"#F5F5F5\")\n        .setFontWeight(\"bold\")\n        .setHorizontalAlignment(\"center\");\n      startRow++;\n      // Initialize arrays for batch processing\n      const categoryStartRow = startRow;\n      let currentCategoryRow = 0;\n      // Arrays for batch processing\n      const categoryValues = [];\n      const typeValues = [];\n      const amountValues = [];\n      const percentFormulas = [];\n      const targetValues = [];\n      const varianceFormulas = [];\n      const backgroundColors = [];\n      const conditionalFormatRules = [];\n      // Consistent background color\n      const categoryBgColor = this.config.COLORS.UI.METRICS_BG;\n      // Add rows for each expense category"}