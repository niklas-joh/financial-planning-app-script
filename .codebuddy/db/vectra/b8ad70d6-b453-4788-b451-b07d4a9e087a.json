{"chunk":14,"numChunks":16,"fileHash":"ssmcQ0l17lzZ6cTkB6Q6jIWT/mx9w0130z/9G1a/Gu0=","filePath":"cline/clasp-verify/src/core/config.js","content":"/**\nFinancialPlanner.Config = (function() {\n  return {\n    /**\n     * Gets a deep copy of the complete configuration object, merging default and user-specific settings.\n     * @return {object} The complete configuration object.\n     *\n     * @example\n     * const currentConfig = FinancialPlanner.Config.get();\n     * console.log(currentConfig.SHEETS.OVERVIEW); // Outputs: \"Overview\"\n     */\n    get: function() {\n      // Return a deep copy of the merged configuration\n      return JSON.parse(JSON.stringify(mergeConfig({}, DEFAULT_CONFIG)));\n    },\n    /**\n     * Gets a specific top-level section from the configuration.\n     * @param {string} section The name of the configuration section (e.g., 'SHEETS', 'COLORS').\n     * @return {object} The requested configuration section, or an empty object if the section doesn't exist.\n     *\n     * @example\n     * const sheetSettings = FinancialPlanner.Config.getSection('SHEETS');\n     * console.log(sheetSettings.TRANSACTIONS); // Outputs: \"Transactions\"\n     *\n     * const nonExistent = FinancialPlanner.Config.getSection('NON_EXISTENT');\n     * console.log(nonExistent); // Outputs: {}\n     */\n    getSection: function(section) {\n      const config = this.get();\n      return config[section] || {};\n    },\n    /**\n     * Gets the sheet names configuration.\n     * @return {object} An object containing sheet name configurations.\n     *\n     * @example\n     * const sheetNames = FinancialPlanner.Config.getSheetNames();\n     * console.log(sheetNames.OVERVIEW); // Outputs: \"Overview\"\n     */\n    getSheetNames: function() {\n      return this.getSection('SHEETS');\n    },"}