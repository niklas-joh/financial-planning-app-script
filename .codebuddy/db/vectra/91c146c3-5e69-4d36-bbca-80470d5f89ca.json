{"chunk":27,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  function addNetCalculations(sheet, startRow) {\n    // Find rows containing total Income, Expenses, and Savings\n    const data = sheet.getDataRange().getValues();\n    const headers = config.getSection('HEADERS');\n    const colors = config.getSection('COLORS').UI;\n    // Find the rows containing the totals we need\n    const totals = findTotalRows(data);\n    const { incomeRow, expensesRow, savingsRow } = totals;\n    if (!incomeRow || !expensesRow) {\n      // Couldn't find required rows\n      return startRow;\n    }\n    // Add a section header for Net Calculations\n    sheet.getRange(startRow, 1).setValue(\"Net Calculations\");\n    sheet.getRange(startRow, 1, 1, headers.length)\n      .setBackground(colors.NET_BG)\n      .setFontWeight(\"bold\")\n      .setFontColor(colors.NET_FONT);\n    startRow++;\n    // Add Net (Income - Expenses) row\n    sheet.getRange(startRow, 1).setValue(\"Net (Total Income - Expenses)\");\n    sheet.getRange(startRow, 1, 1, 4).setBackground(\"#F5F5F5\").setFontWeight(\"bold\");\n    // Create all formulas at once\n    const netFormulas = [];\n    for (let col = 5; col <= 17; col++) {\n      netFormulas.push(`=${utils.columnToLetter(col)}${incomeRow}-${utils.columnToLetter(col)}${expensesRow}`);\n    }\n    // Apply formulas in batch\n    sheet.getRange(startRow, 5, 1, 13).setFormulas([netFormulas]);\n    // Format the cells\n    formatRangeAsCurrency(sheet.getRange(startRow, "}