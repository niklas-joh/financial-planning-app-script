{"chunk":7,"numChunks":12,"fileHash":"JN8zrR3RLBMehoajMVV4kRdQBPjVa7ydJZnM5WDgr0E=","filePath":"src/services/formula-builder.js","content":"/**\nconst FormulaBuilderModule = (function() {\n  /**\n   * Builds a formula for net calculations\n   * @param {Array} components Array of component objects with operation and reference\n   * @returns {string} Complete formula string\n   */\n  FormulaBuilderModuleConstructor.prototype.buildNetFormula = function(components) {\n    const parts = components.map((comp, index) => {\n      const prefix = index === 0 ? '' : (comp.operation === 'add' ? '+' : '-');\n      return `${prefix}${comp.reference}`;\n    });\n    return `=${parts.join('')}`;\n  };\n  /**\n   * Builds a formula reference to another cell\n   * @param {string} sheet Sheet name\n   * @param {string} column Column letter\n   * @param {number} row Row number\n   * @returns {string} Complete cell reference\n   */\n  FormulaBuilderModuleConstructor.prototype.buildCellReference = function(sheet, column, row) {\n    const sheetName = sheet.replace(/'/g, \"''\");\n    return `'${sheetName}'!${column}${row}`;\n  };\n  /**\n   * Builds an IF formula for conditional calculations\n   * @param {string} condition Condition to evaluate\n   * @param {string} trueValue Value if true\n   * @param {string} falseValue Value if false\n   * @returns {string} Complete IF formula\n   */\n  FormulaBuilderModuleConstructor.prototype.buildIfFormula = function(condition, trueValue, falseValue) {\n    return `IF(${condition}, ${trueValue}, ${falseValue})`;\n  };\n  /**\n   * Builds a percentage formula\n   * @param {string} numerator Numerator reference\n   * @param {string} denominator Denominator reference\n   * @param {boolean} [absolute=false] Whether to use absolute value for numerator\n   * @returns {string} Complete formula string\n   */"}