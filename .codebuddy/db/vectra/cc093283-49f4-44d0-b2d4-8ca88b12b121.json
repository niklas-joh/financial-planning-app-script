{"chunk":35,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  /**\n   * Retrieves the configured background and font colors for a given transaction type.\n   * Uses default colors if a specific type is not found in the configuration.\n   * @param {string} type - The name of the transaction type.\n   * @return {{BG: string, FONT: string}} An object containing `BG` (background color hex) and `FONT` (font color hex).\n   * @private\n   */\n  function getTypeColors(type) {\n    const typeHeaders = config.getSection('COLORS').TYPE_HEADERS;\n    const transactionTypes = config.getSection('TRANSACTION_TYPES');\n    \n    let colors = typeHeaders.DEFAULT;\n    \n    if (type === transactionTypes.INCOME) {\n      colors = typeHeaders.INCOME;\n    } else if (type === transactionTypes.ESSENTIALS) {\n      colors = typeHeaders.ESSENTIALS;\n    } else if (type === \"Wants/Pleasure\") {\n      colors = typeHeaders.WANTS_PLEASURE;\n    } else if (type === transactionTypes.EXTRA) {\n      colors = typeHeaders.EXTRA;\n    } else if (type === transactionTypes.SAVINGS) {\n      colors = typeHeaders.SAVINGS;\n    }\n    \n    return colors;\n  }\n  /**\n   * Formats a given cell range as currency using the locale settings from the application configuration.\n   * @param {GoogleAppsScript.Spreadsheet.Range} range - The cell range to format.\n   * @return {void}\n   * @private\n   */\n  function formatRangeAsCurrency(range) {\n    utils.formatAsCurrency(range, \n      config.getSection('LOCALE').CURRENCY_SYMBOL, \n      config.getSection('LOCALE').CURRENCY_LOCALE\n    );\n  }"}