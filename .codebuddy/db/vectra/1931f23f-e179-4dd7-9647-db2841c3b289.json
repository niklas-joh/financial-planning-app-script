{"chunk":5,"numChunks":27,"fileHash":"Hvfxbs62+mBjdPYhoaFqbZMl0X/76Hadv8OqiZ+yaKg=","filePath":"cline/clasp-pull/src/services/dropdowns.js","content":"/**\nFinancialPlanner.DropdownService = (function(utils, uiService, errorService, config) {\n  const DROPDOWN_CONFIG = {\n    CACHE_EXPIRY_SECONDS: 300, // Cache expires in 5 minutes\n    CACHE_KEY: 'dropdownsData',\n    SHEETS: {\n      TRANSACTIONS: 'Transactions', // Ensure this aligns with global config or is passed if different\n      DROPDOWNS: 'Dropdowns'       // Ensure this aligns with global config or is passed if different\n    },\n    COLUMNS: {\n      TYPE: 3,        // Column C\n      CATEGORY: 4,    // Column D\n      SUB_CATEGORY: 5 // Column E\n    },\n    UI: {\n      PLACEHOLDER_TEXT: 'Please select',\n      PENDING_BACKGROUND: '#eeeeee'\n    },\n    KEY_SEPARATOR: '___' // Separator for composite keys\n  };\n  // Private cache (in-memory for the current session, script cache for longer persistence)\n  let dropdownCache = null;\n  /**\n   * Converts Set values within an object to Arrays.\n   * @param {object} obj - The input object where property values might be Sets.\n   * @return {object} A new object where Set values have been converted to Arrays.\n   * @private\n   */\n  function mapSetsToArrays(obj) {\n    const out = {};\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        out[key] = Array.from(obj[key]);\n      }\n    }\n    return out;\n  }"}