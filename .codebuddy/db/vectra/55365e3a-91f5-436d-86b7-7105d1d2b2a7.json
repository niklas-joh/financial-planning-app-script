{"chunk":19,"numChunks":37,"fileHash":"p+NTwC3zq/FPOmXxcPSDB6QbnKDyg9Iv5YKb19s7AmA=","filePath":"src/services/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(utils, uiService, errorService, config) {\n  class FinancialAnalysisService {\n    addKeyMetricsSection(startRow) {\n      const createMetricCard = (metricConf, cardStartRow, startCardColumn) => {\n        const headerRow = cardStartRow;\n        const valuesRow = cardStartRow + 1;\n        const sparklineRow = cardStartRow + 2;\n        const labelsRow = cardStartRow + 3;\n        const descriptionRow = cardStartRow + 4; \n        const cardEndRow = descriptionRow; \n        const cardWidth = 2; \n        sheet.setRowHeight(headerRow, 25);\n        sheet.setRowHeight(valuesRow, 35);\n        sheet.setRowHeight(sparklineRow, 30);\n        sheet.setRowHeight(labelsRow, 20);\n        sheet.setRowHeight(descriptionRow, 35); // Adjusted for potentially longer descriptions\n        sheet.getRange(headerRow, startCardColumn, 1, cardWidth).merge()\n          .setValue(metricConf.name)\n          .setBackground('#E2EFDA')\n          .setFontWeight('bold')\n          .setFontColor('black')\n          .setHorizontalAlignment('center')\n          .setVerticalAlignment('middle');\n        const monthlyValueCell = sheet.getRange(valuesRow, startCardColumn, 1, 1);\n        const annualValueCell = sheet.getRange(valuesRow, startCardColumn + 1, 1, 1);\n        monthlyValueCell.setFormula(metricConf.avgFormula)\n          .setFontSize(18).setFontColor('#008000')\n          .setHorizontalAlignment('center').setVerticalAlignment('middle');"}