{"chunk":45,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  class FinancialOverviewBuilder {\n    addMetrics() {\n      // Create a combined config object for the FinancialAnalysisService\n      const analysisConfig = {\n        ...config.get(),\n        // Add any additional config needed by FinancialAnalysisService (already handled by FinancialAnalysisService itself using main config)\n      };\n      \n      // Use the injected FinancialAnalysisService\n      // The analyze method of FinancialAnalysisService handles its own instantiation and config\n      if (analysisServiceInstance && analysisServiceInstance.analyze) {\n         analysisServiceInstance.analyze(this.spreadsheet, this.overviewSheet);\n      } else {\n        // Fallback or error if the service is not available, though it should be injected\n        console.error(\"FinancialAnalysisService not available for addMetrics\");\n        if (errorService) {\n            errorService.log(errorService.create(\"FinancialAnalysisService not available in FinanceOverview\", { severity: \"high\"}));\n        }\n      }\n      \n      return this;\n    }\n    /**\n     * Applies formatting (column widths, borders) to the overview sheet using the `formatOverviewSheet` helper function.\n     * @return {FinancialOverviewBuilder} Returns the builder instance for method chaining.\n     */\n    formatSheet() {\n      formatOverviewSheet(this.overviewSheet);\n      return this;\n    }\n    /**\n     * Applies user preferences to the sheet, specifically showing or hiding the sub-category column\n     * based on the `showSubCategories` state determined during initialization.\n     * @return {FinancialOverviewBuilder} Returns the builder instance for method chaining.\n     */\n    applyPreferences() {\n      // Show/hide sub-categories based on preference\n      if (this.showSubCategories) {\n        this.overviewSheet.showColumns(3, 1);\n      } else {\n        this.overviewSheet"}