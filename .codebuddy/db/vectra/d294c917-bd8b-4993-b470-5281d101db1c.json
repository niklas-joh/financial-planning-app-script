{"chunk":25,"numChunks":34,"fileHash":"T/csnKZ9ifEIVTqGo1Q4UaU7vyWah1cMM07aoFVML48=","filePath":"cline/clasp-pull/src/tests/finance_overview.test.js","content":"/**\n(function() {\n   const TestFinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) {\n       // --- Copy of FinanceOverview Implementation Start ---\n       // PASTE THE COPIED IMPLEMENTATION OF FinancialPlanner.FinanceOverview HERE\n       // Ensure all internal references use the mocked parameters (utils, uiService, etc.)\n       // For brevity, the full copy is omitted here, but it's crucial for the test setup.\n       // Example snippet:\n        class FinancialPlannerError extends Error { /* ... */ } // Include if defined locally\n        function getProcessedTransactionData(sheet) { /* ... uses errorService ... */ return { data: [], indices: {} }; }\n        function getUniqueCategoryCombinations(data, typeCol, categoryCol, subcategoryCol, showSubCategories) { /* ... */ return []; }\n        function groupCategoryCombinations(combinations) { /* ... */ return {}; }\n        function buildMonthlySumFormula(params) { /* ... uses utils, config ... */ return \"=SUM(A1)\"; }\n        function formatDate(date) { /* ... uses Utilities, Session, config ... */ return \"DATE\"; }\n        function clearSheetContent(sheet) { /* ... uses sheet mock ... */ }\n        function setupHeaderRow(sheet, showSubCategories) { /* ... uses config, sheet mock ... */ }\n        function addTypeHeaderRow(sheet, type, rowIndex) { /* ... uses config, sheet mock ... */ return rowIndex + 1; }\n        function addCategoryRows(sheet, combinations, rowIndex, type, columnIndices) { /* ... uses config, utils, sheet mock ... */ return rowIndex + combinations.length; }\n        function addTypeSubtotalRow(sheet, type, rowIndex, rowCount) { /* ... uses config, utils, sheet mock ... */ return rowIndex + 1; }"}