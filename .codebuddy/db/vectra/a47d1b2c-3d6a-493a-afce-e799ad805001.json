{"chunk":10,"numChunks":27,"fileHash":"Hvfxbs62+mBjdPYhoaFqbZMl0X/76Hadv8OqiZ+yaKg=","filePath":"cline/clasp-pull/src/services/dropdowns.js","content":"/**\nFinancialPlanner.DropdownService = (function(utils, uiService, errorService, config) {\n  function buildDropdownCache(spreadsheet) {\n    try {\n      const scriptCache = CacheService.getScriptCache(); // Native Google Apps Script CacheService\n      let cachedData = scriptCache.get(DROPDOWN_CONFIG.CACHE_KEY);\n      if (cachedData) {\n        Logger.log('DropdownService: Using cached dropdown data from ScriptCache.');\n        const parsed = JSON.parse(cachedData);\n        return {\n          typeToCategories: parsed.typeToCategories || {},\n          typeCategoryToSubCategories: parsed.typeCategoryToSubCategories || {},\n        };\n      }\n      Logger.log('DropdownService: Building dropdown cache from sheet.');\n      const dropdownsSheetName = (config && config.get && config.get().SHEETS && config.get().SHEETS.DROPDOWNS)\n                                  ? config.get().SHEETS.DROPDOWNS\n                                  : DROPDOWN_CONFIG.SHEETS.DROPDOWNS;\n      const dropdownsSheet = spreadsheet.getSheetByName(dropdownsSheetName);\n      if (!dropdownsSheet) {\n        throw new Error(`Dropdowns definition sheet \"${dropdownsSheetName}\" not found.`);\n      }\n      const dropdownsData = dropdownsSheet.getDataRange().getValues();\n      // Assuming header is 'Type', 'Category', 'Sub-Category'\n      const headerRow = (dropdownsData.length > 0 && dropdownsData[0][0] === 'Type') ? 1 : 0;\n      const typeToCategories = {};\n      const typeCategoryToSubCategories = {};"}