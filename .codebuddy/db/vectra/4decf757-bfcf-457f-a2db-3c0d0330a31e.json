{"chunk":21,"numChunks":54,"fileHash":"vN+W2tDiA59Daq+vJZZ4NvNU8baK6mDpzqFA2kTr3NY=","filePath":"cline/clasp-pull/src/services/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(utils, uiService, errorService, config) {\n  class FinancialAnalysisService {\n    addKeyMetricsSection(startRow) {\n      if (this.totals.income.row > 0 && this.totals.expenses.row > 0) {\n        metricValues.push([\"Expenses/Income Ratio\"]);\n        metricFormulas.push([`=-${this.totals.expenses.value}/${this.totals.income.value}`]);\n        metricTargets.push([this.config.TARGET_RATES.DEFAULT * -1]); // Use config target rate with negative sign\n        metricDescriptions.push([\"Negative % indicates spending, lower absolute value is better\"]);\n        metricBackgrounds.push([metricBgColor]);\n        \n        // Add conditional formatting (green if meeting target, red if not)\n        // Use direct cell reference instead of string formula\n        const targetCell = this.analysisSheet.getRange(startRow + currentMetricRow, 3);\n        const valueCell = this.analysisSheet.getRange(startRow + currentMetricRow, 2);\n        \n        conditionalFormatRules.push({\n          row: startRow + currentMetricRow,\n          rule: SpreadsheetApp.newConditionalFormatRule()\n            .whenFormulaSatisfied(`B${startRow + currentMetricRow}<C${startRow + currentMetricRow}`)\n            .setBackground(\"#FFCDD2\") // Light red if below target (more negative)\n            .setRanges([valueCell])\n        });\n        \n        currentMetricRow++;\n      }\n      // 2. Essentials Rate"}