{"chunk":11,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  function buildMonthlySumFormula(params) {\n    const {\n      type, category, subcategory, monthDate, sheetName,\n      typeCol, categoryCol, subcategoryCol, dateCol, amountCol, sharedCol\n    } = params;\n    const month = monthDate.getMonth() + 1; // 1-indexed month\n    const year = monthDate.getFullYear();\n    // Calculate date range for the month\n    const startDate = new Date(year, month - 1, 1);\n    const endDate = new Date(year, month, 0); // Last day of month\n    // Format dates\n    const startDateFormatted = formatDate(startDate);\n    const endDateFormatted = formatDate(endDate);\n    // Sum range\n    const sumRange = `${sheetName}!${utils.columnToLetter(amountCol)}:${utils.columnToLetter(amountCol)}`;\n    // Base criteria for all formulas\n    const baseCriteria = [\n      `${sheetName}!${utils.columnToLetter(typeCol)}:${utils.columnToLetter(typeCol)}, \"${type}\"`,\n      `${sheetName}!${utils.columnToLetter(categoryCol)}:${utils.columnToLetter(categoryCol)}, \"${category}\"`,\n      `${sheetName}!${utils.columnToLetter(dateCol)}:${utils.columnToLetter(dateCol)}, \">=${startDateFormatted}\"`,\n      `${sheetName}!${utils.columnToLetter(dateCol)}:${utils.columnToLetter(dateCol)}, \"<=${endDateFormatted}\"`\n    ];\n    // Add subcategory criteria if it exists\n    if (subcategory) {\n      baseCriteria.push(`${sheetName}!${utils.columnToLetter(subcategoryCol)}:${utils.columnToLetter(subcategoryCol)}, \"${subcategory}\"`);\n    }\n    // For expense types, handle shared expenses differently"}