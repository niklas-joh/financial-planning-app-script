{"chunk":21,"numChunks":25,"fileHash":"kS6Otb0ktf7SNGRgDc+bn8H5lrkmK9GeXCt+rLvCNP0=","filePath":"src/tests/settings-service.test.js","content":"/**\n(function() {\n  T.registerTest(\"SettingsService\", \"setValue should update an existing preference\", function() {\n    setupMockSheet();\n    const key = \"existing_pref\";\n    const initialValue = \"initial_value\";\n    const updatedValue = \"updated_value\";\n    // Set initial value\n    mockSheetData[mockConfig._settingsSheetName].push([key, initialValue]);\n\n    TestSettingsService.setValue(key, updatedValue);\n    const retrievedValue = TestSettingsService.getValue(key, \"default\");\n    T.assertEquals(updatedValue, retrievedValue, \"Should retrieve the updated value.\");\n     // Check sheet data directly\n    const sheetData = mockSheetData[mockConfig._settingsSheetName];\n    T.assertEquals(2, sheetData.length, \"Sheet should still have header + 1 data row.\");\n    T.assertEquals(key, sheetData[1][0], \"Key should be in the second row, first column.\");\n    T.assertEquals(updatedValue, sheetData[1][1], \"Value should be updated in the second row, second column.\");\n  });"}