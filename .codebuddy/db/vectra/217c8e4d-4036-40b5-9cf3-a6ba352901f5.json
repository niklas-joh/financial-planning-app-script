{"chunk":11,"numChunks":13,"fileHash":"FPWMpHmLZKu4rtU3UJKiqtFhACvzN0astec1eIzBF5E=","filePath":"src/services/data_processor.js","content":"/**\nconst DataProcessorModule = (function() {\n  class DataProcessor {\n    getMonthlyTotals(type, category = null, subcategory = null) {\n      const monthlyTotals = {};\n      \n      for (let month = 0; month < 12; month++) {\n        const year = 2024; // This should be configurable\n        const startDate = new Date(year, month, 1);\n        const endDate = new Date(year, month + 1, 0);\n        \n        const transactions = this.filterByDateRange(startDate, endDate)\n          .filter((row, index) => {\n            if (index === 0) return false;\n            if (row[this.indices.type] !== type) return false;\n            if (category && row[this.indices.category] !== category) return false;\n            if (subcategory && row[this.indices.subcategory] !== subcategory) return false;\n            return true;\n          });\n        \n        const total = transactions.reduce((sum, row) => {\n          return sum + (parseFloat(row[this.indices.amount]) || 0);\n        }, 0);\n        \n        monthlyTotals[month] = total;\n      }\n      \n      return monthlyTotals;\n    }\n    /**\n     * Validates data structure\n     */\n    validateStructure() {\n      const requiredColumns = ['type', 'category', 'date', 'amount'];\n      const missing = requiredColumns.filter(col => this.indices[col] === -1);\n      \n      if (missing.length > 0) {\n        throw this.errorService.create(\n          `Required columns not found: ${missing.join(', ')}`,\n          { headers: this.headers, severity: 'high' }\n        );\n      }\n      \n      return true;\n    }\n    /**\n     * Gets column indices from headers\n     */"}