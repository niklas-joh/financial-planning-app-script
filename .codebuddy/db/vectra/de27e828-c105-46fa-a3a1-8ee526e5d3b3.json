{"chunk":24,"numChunks":25,"fileHash":"kS6Otb0ktf7SNGRgDc+bn8H5lrkmK9GeXCt+rLvCNP0=","filePath":"src/tests/settings-service.test.js","content":"/**\n(function() {\n  T.registerTest(\"SettingsService\", \"toggleBooleanValue should toggle correctly\", function() {\n    setupMockSheet();\n    const key = \"toggle_test\";\n\n    // Test 1: Default is false, toggle to true\n    let newValue = TestSettingsService.toggleBooleanValue(key, false);\n    T.assertTrue(newValue, \"Toggle 1: Should return true.\");\n    T.assertTrue(TestSettingsService.getBooleanValue(key, false), \"Toggle 1: Stored value should be true.\");\n\n    // Test 2: Toggle existing true to false\n    newValue = TestSettingsService.toggleBooleanValue(key, false);\n    T.assertFalse(newValue, \"Toggle 2: Should return false.\");\n    T.assertFalse(TestSettingsService.getBooleanValue(key, true), \"Toggle 2: Stored value should be false.\");\n\n     // Test 3: Toggle existing false to true\n    newValue = TestSettingsService.toggleBooleanValue(key, false);\n    T.assertTrue(newValue, \"Toggle 3: Should return true.\");\n    T.assertTrue(TestSettingsService.getBooleanValue(key, false), \"Toggle 3: Stored value should be true.\");\n  });\n  T.registerTest(\"SettingsService\", \"ShowSubCategories methods should work together\", function() {\n      setupMockSheet();\n      // Default should be true\n      T.assertTrue(TestSettingsService.getShowSubCategories(), \"Default ShowSubCategories should be true.\");\n      \n      // Toggle to false\n      TestSettingsService.toggleShowSubCategories();\n      T.assertFalse(TestSettingsService.getShowSubCategories(), \"ShowSubCategories should be false after toggle.\");\n      \n      // Set explicitly to true\n      TestSettingsService.setShowSubCategories(true);\n      T.assertTrue(TestSettingsService.getShowSubCategories(), \"ShowSubCategories should be true after explicit set.\");\n  });"}