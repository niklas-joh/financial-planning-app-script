{"chunk":32,"numChunks":34,"fileHash":"T/csnKZ9ifEIVTqGo1Q4UaU7vyWah1cMM07aoFVML48=","filePath":"src/tests/finance_overview.test.js","content":"/**\n(function() {\n  T.registerTest(\"FinanceOverview\", \"create should initialize, process, build, and format\", function() {\n      setupMockDataAndState();\n      mockUserPropertiesStore[\"ShowSubCategories\"] = true; // Set preference for test\n\n      const result = TestFinanceOverview.create();\n\n      T.assertNotNull(result, \"Create should return a result object.\");\n      T.assertTrue(result.success, \"Result success flag should be true.\");\n      T.assertNotNull(result.sheet, \"Result should contain the sheet object.\");\n      T.assertEquals(\"Overview\", result.sheet.getName(), \"Result sheet should be the Overview sheet.\");\n\n      // Verify interactions with mocks\n      T.assertTrue(cacheInvalidateAllCalled, \"cacheService.invalidateAll should be called.\");\n      T.assertTrue(settingsGetValueLog[\"ShowSubCategories\"] > 0, \"settingsService.getValue('ShowSubCategories') should be called.\");\n      T.assertTrue(cacheGetLog[\"cats\"] > 0, \"cacheService.get for categories should be called.\");\n      T.assertTrue(cacheGetLog[\"grouped\"] > 0, \"cacheService.get for grouped categories should be called.\");\n      T.assertTrue(analysisServiceAnalyzeCalled, \"analysisService.analyze should be called.\");\n      T.assertNotNull(lastToast, \"Success notification should be shown.\");\n      T.assertEquals(\"Financial overview generated successfully!\", lastToast.message, \"Correct success message expected.\");\n\n      // Verify basic sheet setup (more detailed checks are complex with mocks)\n      const overviewData = mockSheetData[\"Overview\"];\n      T.assertTrue(overviewData.length > 5, \"Overview sheet should have multiple rows generated.\"); // Basic check\n      T.assertEquals(\"Type\", overviewData[0][0], \"Header row should contain 'Type'.\");\n      T.assertEquals(\"Show Sub-Categories\", overviewData[0][18], \"Sub-category toggle label should be present.\"); // Assuming S=19\n  });"}