{"chunk":20,"numChunks":34,"fileHash":"T/csnKZ9ifEIVTqGo1Q4UaU7vyWah1cMM07aoFVML48=","filePath":"cline/clasp-pull/src/tests/finance_overview.test.js","content":"/**\n(function() {\n  const mockSettingsService = {\n      getValue: function(key, defaultValue) { settingsGetValueLog[key] = (settingsGetValueLog[key] || 0) + 1; return mockUserPropertiesStore[key] !== undefined ? mockUserPropertiesStore[key] : defaultValue; },\n      setValue: function(key, value) { settingsSetValueLog[key] = (settingsSetValueLog[key] || 0) + 1; mockUserPropertiesStore[key] = value; }\n      // Add getPreference/setPreference if used by the actual service code being tested\n  };\n  const mockAnalysisService = {\n      analyze: function(ss, sheet) { analysisServiceAnalyzeCalled = true; /* console.log(\"Mock AnalysisService.analyze called\"); */ }\n  };\n  const mockCacheService = {\n      get: function(key, computeFunc) {\n          cacheGetLog[key] = (cacheGetLog[key] || 0) + 1;\n          const cached = mockScriptCacheStore[key];\n          if (cached) return JSON.parse(cached); // Simplified mock get\n          const result = computeFunc();\n          mockScriptCacheStore[key] = JSON.stringify(result); // Simplified mock put\n          return result;\n      },\n      invalidateAll: function() { cacheInvalidateAllCalled = true; mockScriptCacheStore = {}; }\n  };\n  // --- Test Suite Setup ---\n   // Redefine FinanceOverview with mocks"}