{"chunk":9,"numChunks":13,"fileHash":"FPWMpHmLZKu4rtU3UJKiqtFhACvzN0astec1eIzBF5E=","filePath":"src/services/data_processor.js","content":"/**\nconst DataProcessorModule = (function() {\n  class DataProcessor {\n    aggregateByMonth() {\n      const monthlyData = {};\n      \n      for (let i = 1; i < this.data.length; i++) {\n        const row = this.data[i];\n        const date = new Date(row[this.indices.date]);\n        const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n        \n        if (!monthlyData[monthKey]) {\n          monthlyData[monthKey] = {\n            income: 0,\n            expenses: 0,\n            savings: 0,\n            transactions: []\n          };\n        }\n        \n        const amount = parseFloat(row[this.indices.amount]) || 0;\n        const type = row[this.indices.type];\n        \n        if (type === 'Income') {\n          monthlyData[monthKey].income += amount;\n        } else if (type === 'Savings') {\n          monthlyData[monthKey].savings += Math.abs(amount);\n        } else {\n          monthlyData[monthKey].expenses += amount;\n        }\n        \n        monthlyData[monthKey].transactions.push(row);\n      }\n      \n      return monthlyData;\n    }\n    /**\n     * Aggregates by category\n     */\n    aggregateByCategory() {\n      const categoryData = {};\n      \n      for (let i = 1; i < this.data.length; i++) {\n        const row = this.data[i];\n        const category = row[this.indices.category];\n        \n        if (!category) continue;\n        \n        if (!categoryData[category]) {\n          categoryData[category] = {\n            total: 0,\n            count: 0,\n            transactions: []\n          };\n        }\n        \n        const amount = parseFloat(row[this.indices.amount]) || 0;\n        categoryData[category].total += amount;\n        categoryData[category].count++;\n        categoryData[category].transactions.push(row);\n      }\n      \n      return categoryData;\n    }\n    /**\n    "}