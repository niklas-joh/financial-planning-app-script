{"chunk":15,"numChunks":36,"fileHash":"5PxeaT4n9kgvALpAj5B1jgQlallPIdU12UlI5e4vOJw=","filePath":"src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) {\n  function addCategoryRows(sheet, combinations, rowIndex, type, columnIndices, showSubCategories) {\n    for (let i = 0; i < numRows; i++) {\n      const combo = combinations[i]; const currentRow = startRow + i; const rowFormulas = [];\n      for (let monthCol = 5; monthCol <= 16; monthCol++) {\n        const monthDate = new Date(2024, monthCol - 5, 1);\n        const formulaParams = { \n          type: combo.type, \n          category: combo.category, \n          subcategory: combo.subcategory, \n          monthDate, \n          sheetName: sheetNames.TRANSACTIONS, \n          ...columnIndices, \n          typeCol: columnIndices.type + 1, \n          categoryCol: columnIndices.category + 1, \n          subcategoryCol: columnIndices.subcategory + 1, \n          dateCol: columnIndices.date + 1, \n          amountCol: columnIndices.amount + 1, \n          sharedCol: columnIndices.shared + 1,\n          overviewSheetName: sheetNames.OVERVIEW,\n          showSubCategories: showSubCategories\n        };\n        rowFormulas.push(buildMonthlySumFormula(formulaParams, currentRow));\n      }\n      if (config.getSection('PERFORMANCE').USE_BATCH_OPERATIONS) sheet.getRange(currentRow, 5, 1, 12).setFormulas([rowFormulas]);\n      else for (let monthCol = 0; monthCol < 12; monthCol++) sheet.getRange(currentRow, monthCol + 5).setFormula(rowFormulas[monthCol]);\n      sheet.getRange(currentRow, 17).setFormula(`=SUM(E${currentRow}:P${currentRow})`"}