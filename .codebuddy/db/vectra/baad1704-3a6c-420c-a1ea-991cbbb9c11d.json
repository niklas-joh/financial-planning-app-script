{"chunk":4,"numChunks":11,"fileHash":"/PHrQyqA5cetRfWinyFGgGswyQob/Jj+6lGnFfyhiRY=","filePath":"cline/clasp-pull/src/core/settings-service.js","content":"/**\nFinancialPlanner.SettingsService = (function(config, utils, uiService, errorService) {\n  // Private variables and functions\n  /**\n   * Retrieves the dedicated 'Settings' sheet from the active spreadsheet.\n   * If the sheet does not exist, it creates and initializes it with a header row (\"Preference\", \"Value\")\n   * and then hides the sheet.\n   * @return {GoogleAppsScript.Spreadsheet.Sheet} The settings sheet object.\n   * @private\n   */\n  function getSettingsSheet() {\n    const ss = SpreadsheetApp.getActiveSpreadsheet();\n    const sheetName = config.getSheetNames().SETTINGS;\n    \n    let sheet = ss.getSheetByName(sheetName);\n    \n    if (!sheet) {\n      // Create a new settings sheet\n      sheet = ss.insertSheet(sheetName);\n      \n      // Set up the header row\n      sheet.getRange(\"A1:B1\").setValues([[\"Preference\", \"Value\"]]);\n      sheet.getRange(\"A1:B1\").setFontWeight(\"bold\");\n      \n      // Hide the sheet (it's just for storing settings)\n      sheet.hideSheet();\n    }\n    \n    return sheet;\n  }\n  /**\n   * Searches for a preference key in the settings sheet.\n   * @param {string} key - The preference key to find (e.g., \"ShowSubCategories\").\n   * @return {{row: number, value: any} | null} An object containing the 1-based row index and the current value\n   *                                            if the key is found; otherwise, null.\n   * @private\n   */"}