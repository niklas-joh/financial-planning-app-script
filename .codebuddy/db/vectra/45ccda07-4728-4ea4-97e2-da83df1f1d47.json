{"chunk":5,"numChunks":8,"fileHash":"5yZhuOmtqb/ofJDCAq3kLRdc5v5ILiCThcGKZUQD/PY=","filePath":"src/core/settings-service.js","content":"/**\nconst SettingsServiceModule = (function() {\n  /**\n   * Constructor for the SettingsServiceModule.\n   * @param {object} configInstance - An instance of ConfigModule.\n   * @param {object} uiServiceInstance - An instance of UIServiceModule.\n   * @param {object} errorServiceInstance - An instance of ErrorServiceModule.\n   * @constructor\n   */\n  function SettingsServiceModuleConstructor(configInstance, uiServiceInstance, errorServiceInstance) {\n    this.config = configInstance;\n    this.uiService = uiServiceInstance;\n    this.errorService = errorServiceInstance;\n    // FinancialPlanner.Utils is assumed to be globally available or refactored separately.\n  }\n  SettingsServiceModuleConstructor.prototype._getSettingsSheet = function() {\n    const ss = SpreadsheetApp.getActiveSpreadsheet();\n    const sheetName = this.config.getSheetNames().SETTINGS;\n    let sheet = ss.getSheetByName(sheetName);\n\n    if (!sheet) {\n      sheet = ss.insertSheet(sheetName);\n      sheet.getRange('A1:B1').setValues([['Preference', 'Value']]).setFontWeight('bold');\n      sheet.hideSheet();\n    }\n    return sheet;\n  };\n  SettingsServiceModuleConstructor.prototype._findPreference = function(key) {\n    const sheet = this._getSettingsSheet();\n    const data = sheet.getDataRange().getValues();\n    for (let i = 1; i < data.length; i++) {\n      if (data[i][0] === key) {\n        return { row: i + 1, value: data[i][1] };\n      }\n    }\n    return null;\n  };"}