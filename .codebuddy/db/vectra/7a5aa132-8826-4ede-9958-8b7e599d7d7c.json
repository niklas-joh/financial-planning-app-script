{"chunk":9,"numChunks":25,"fileHash":"kS6Otb0ktf7SNGRgDc+bn8H5lrkmK9GeXCt+rLvCNP0=","filePath":"cline/clasp-pull/src/tests/settings-service.test.js","content":"/**\n(function() {\n  const mockSheet = {\n    _name: null,\n    _dataRef: null, // Reference to this sheet's data in mockSheetData\n    _hidden: false,\n    getName: function() { return this._name; },\n    getDataRange: function() {\n      // Simplified: return range covering all data\n      const numRows = this._dataRef.length;\n      const numCols = numRows > 0 ? this._dataRef[0].length : 0;\n      return Object.assign({}, mockRange, {\n          _sheetName: this._name, _row: 1, _col: 1, _numRows: numRows, _numCols: numCols, _sheetDataRef: this._dataRef\n      });\n    },\n    getRange: function(row, col, numRows = 1, numCols = 1) {\n       // Ensure sheet has enough rows/cols - simplified mock doesn't auto-expand\n       while(this._dataRef.length < row + numRows -1) this._dataRef.push([]);\n       const maxCols = col + numCols -1;\n       this._dataRef.forEach(r => { while(r.length < maxCols) r.push(\"\"); });\n\n       return Object.assign({}, mockRange, {\n           _sheetName: this._name, _row: row, _col: col, _numRows: numRows, _numCols: numCols, _sheetDataRef: this._dataRef\n       });\n    },"}