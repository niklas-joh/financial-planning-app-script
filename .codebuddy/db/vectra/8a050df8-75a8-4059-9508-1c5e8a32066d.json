{"chunk":14,"numChunks":30,"fileHash":"+K7Wn3694Zo7CvqWeZ2iy4UDcUumZZ0a1vWhvg0ddkM=","filePath":"cline/clasp-pull/src/tests/financial_analysis.test.js","content":"/**\n(function() {\n   const mockChart = { _type: null, _options: {}, _ranges: [], _position: {} };\n   const mockChartBuilder = {\n       setChartType: function(type) { mockChart._type = type; return this; },\n       addRange: function(range) { mockChart._ranges.push(range); return this; },\n       setPosition: function(row, col, offX, offY) { mockChart._position = {row, col, offX, offY}; return this; },\n       setOption: function(name, value) { mockChart._options[name] = value; return this; },\n       build: function() { return Object.assign({}, mockChart); } // Return a copy\n   };\n  mockActiveSpreadsheet = {\n    sheets: {},\n    getSheetByName: function(name) { return this.sheets[name] || null; },\n    insertSheet: function(name) { /* ... simplified ... */\n        if (this.sheets[name]) return this.sheets[name];\n        const newSheetData = []; mockSheetData[name] = newSheetData;\n        const newSheet = Object.assign({}, mockSheet, { _name: name, _dataRef: newSheetData });\n        this.sheets[name] = newSheet; return newSheet;\n    }\n  };\n  // Global mocks"}