{"chunk":3,"numChunks":6,"fileHash":"4J/F6jztoSopXGH+HUzsdoFy8hwAMuuA4EeFaUD+ijc=","filePath":"cline/clasp-pull/src/tests/visualizations.test.js","content":"/**\n(function() {\n  // Alias for easier access\n  const T = FinancialPlanner.Testing;\n  // --- Mock Dependencies & Globals ---\n  let lastToast = null;\n  let lastAlert = null;\n  let lastHandledError = null;\n  // Mock UI Service\n  const mockUiService = {\n    showLoadingSpinner: function(msg) { lastToast = { message: msg, title: \"Working...\" }; },\n    hideLoadingSpinner: function() { /* Mock */ },\n    showInfoAlert: function(title, message) { lastAlert = { title: title, message: message }; }, // Used by placeholders\n    showErrorNotification: function(title, message) { lastAlert = { title: title, message: message }; } // Use alert for error mock\n  };\n   // Mock Error Service\n  const mockErrorService = {\n    handle: function(error, msg) { lastHandledError = { error, msg }; console.error(\"ERROR SERVICE MOCK:\", msg, error); },\n    create: function(msg, details) { const e = new Error(msg); e.details = details; e.name=\"FinancialPlannerError\"; return e; },\n    log: function(error) { console.log(\"ErrorService Mock Log:\", error.message); }\n  };\n  // Mock Config and Utils (minimal mocks as they aren't directly used by placeholders)\n  const mockConfig = {};\n  const mockUtils = {};\n  // Global mocks needed by service implementation (even if placeholders)\n  global.SpreadsheetApp = {\n      getUi: function() { return { alert: mockUiService.showInfoAlert }; } // Mock the specific call used in placeholders\n  };\n  global.Logger = { log: function(msg) { console.log(\"Logger.log:\", msg); } };\n  // --- Test Suite Setup ---\n   // Redefine VisualizationService with mocks"}