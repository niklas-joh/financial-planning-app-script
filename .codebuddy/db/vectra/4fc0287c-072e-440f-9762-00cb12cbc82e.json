{"chunk":25,"numChunks":31,"fileHash":"p7QjnH7owYj6gI9sV03tmQN28z3j87qqpbMEZWUm4gw=","filePath":"cline/clasp-pull/src/tests/dropdowns.test.js","content":"/**\n(function() {\n   T.registerTest(\"DropdownService\", \"handleEdit on Category should update Sub-Category dropdown\", function() {\n      setupMockSheets();\n      const transactionsSheet = mockActiveSpreadsheet.getSheetByName(\"Transactions\");\n      // Pre-set Type in R4\n      transactionsSheet.getRange(4, 3).setValue(\"Expense\");\n      // Edit Category in R4\n      const editRange = transactionsSheet.getRange(4, 4);\n      editRange.setValue(\"Food\");\n\n      const mockEvent = { range: editRange, source: mockActiveSpreadsheet, value: \"Food\" };\n      TestDropdownService.handleEdit(mockEvent);\n\n      // Check validation on Sub-Category cell (R4, C5)\n      const subCategoryCellA1 = `R4C5`;\n      const validationRule = dataValidations[\"Transactions\"] ? dataValidations[\"Transactions\"][subCategoryCellA1] : null;\n      T.assertNotNull(validationRule, \"Data validation should be set on Sub-Category cell.\");\n      T.assertTrue(validationRule._values.includes(\"Groceries\"), \"Sub-Category options should include 'Groceries'.\");\n      T.assertTrue(validationRule._values.includes(\"Restaurants\"), \"Sub-Category options should include 'Restaurants'.\");\n      T.assertEquals(TestDropdownService.DROPDOWN_CONFIG.UI.PLACEHOLDER_TEXT, validationRule._values[0], \"First sub-category option should be placeholder.\");\n       // Check highlighting\n      T.assertEquals(TestDropdownService.DROPDOWN_CONFIG.UI.PENDING_BACKGROUND, transactionsSheet.getRange(4, 5)._background, \"Sub-Category cell should be highlighted.\");\n   });"}