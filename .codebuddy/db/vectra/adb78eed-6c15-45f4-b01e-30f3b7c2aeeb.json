{"chunk":10,"numChunks":15,"fileHash":"WF/+BE1W5ThwGtH1c6mstkQ0iFCyZ7d4PHM8NSeT2kI=","filePath":"cline/clasp-pull/src/tests/error-service.test.js","content":"/**\n(function() {\n  const TestErrorService = (function(config, uiService, utils) {\n      function logToSheet(error) {\n        try {\n          const ss = SpreadsheetApp.getActiveSpreadsheet(); // Still uses global SS object\n          const errorSheet = utils.getOrCreateSheet(ss, config.getSheetNames().ERROR_LOG); // Use mocked utils\n          \n          if (errorSheet.getLastRow() === 0) {\n            errorSheet.appendRow([\"Timestamp\", \"Error Type\", \"Message\", \"Details\"]);\n            errorSheet.getRange(1, 1, 1, 4).setFontWeight(\"bold\");\n          }\n          \n          const errorDetails = error.details || {};\n          const formattedDetails = JSON.stringify(errorDetails);\n          \n          errorSheet.appendRow([\n            error.timestamp || new Date(), \n            error.name || \"Error\", \n            error.message, \n            formattedDetails\n          ]);\n          \n          const lastRow = errorSheet.getLastRow();\n          errorSheet.getRange(lastRow, 1).setNumberFormat(\"yyyy-MM-dd HH:mm:ss\");\n          \n          const severity = errorDetails.severity || \"low\";\n          const bgColor = severity === \"high\" ? \"#F9BDBD\" : \n                          severity === \"medium\" ? \"#FFE0B2\" : \"#E1F5FE\";\n          errorSheet.getRange(lastRow, 1, 1, 4).setBackground(bgColor);\n        } catch (logError) {\n          console.error(\"Failed to log error to sheet:\", logError);\n          console.error(\"Original error:\", error.message, error.details);\n        }\n      }\n      function logToConsole(error) {\n        // In tests, Logger.log is often preferred over console.error for GAS execution logs\n        Logger.log(`[${error.name || \"Error\"}] ${error.message}`);\n        if (error.details) {\n          Logger.log(\"Details: \" + JSON.stringify(error.details));\n        }\n        if (error.stack) {\n          "}