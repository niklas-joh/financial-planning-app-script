{"chunk":8,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  function groupCategoryCombinations(combinations) {\n    // Group by type using reduce\n    const grouped = combinations.reduce((acc, combo) => {\n      if (!acc[combo.type]) {\n        acc[combo.type] = [];\n      }\n      acc[combo.type].push(combo);\n      return acc;\n    }, {});\n    \n    // Sort each group\n    Object.keys(grouped).forEach(type => {\n      grouped[type].sort((a, b) => {\n        // Primary sort by category\n        const categoryCompare = a.category.localeCompare(b.category);\n        // Secondary sort by subcategory if categories are the same\n        return categoryCompare !== 0 ? categoryCompare : \n               (a.subcategory || \"\").localeCompare(b.subcategory || \"\");\n      });\n    });\n    \n    return grouped;\n  }"}