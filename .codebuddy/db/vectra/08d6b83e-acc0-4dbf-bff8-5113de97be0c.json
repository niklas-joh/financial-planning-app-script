{"chunk":4,"numChunks":25,"fileHash":"NFeCXCcs54GgVRSaoZ7YUMS8I/hASRpntpW0s0paeLI=","filePath":"cline/clasp-pull/src/tests/cache-service.test.js","content":"/**\n(function() {\n  const mockScriptCache = {\n    get: function(key) {\n      if (scriptCacheGetError) throw scriptCacheGetError;\n      // Simulate expiry (simplified) - real CacheService handles this internally\n      const item = mockScriptCacheStore[key];\n      if (item && item.expiry && item.expiry < Date.now()) {\n          // console.log(`Mock Cache: Key '${key}' expired.`);\n          delete mockScriptCacheStore[key];\n          return null;\n      }\n      // console.log(`Mock Cache: Getting key '${key}', found: ${item ? item.value : 'null'}`);\n      return item ? item.value : null;\n    },\n    put: function(key, value, ttl) {\n      if (scriptCachePutError) throw scriptCachePutError;\n      const expiry = ttl ? Date.now() + ttl * 1000 : null;\n      // console.log(`Mock Cache: Putting key '${key}' with value '${value}', ttl: ${ttl}, expiry: ${expiry}`);\n      mockScriptCacheStore[key] = { value: value, expiry: expiry };\n    },\n    remove: function(key) {\n      if (scriptCacheRemoveError) throw scriptCacheRemoveError;\n      // console.log(`Mock Cache: Removing key '${key}'`);\n      delete mockScriptCacheStore[key];\n    },\n    removeAll: function(keys) {\n       if (scriptCacheRemoveAllError) throw scriptCacheRemoveAllError;\n       // console.log(`Mock Cache: Removing keys: ${keys.join(', ')}`);\n       keys.forEach(key => delete mockScriptCacheStore[key]);\n    }\n  };\n  // Global mock for CacheService\n  global.CacheService = {\n    getScriptCache: function() {\n      return mockScriptCache;\n    }\n    // getDocumentCache, getUserCache etc. could be mocked if needed\n  };\n  // Mock JSON methods to simulate errors if needed\n  const originalJSONParse = JSON.parse;"}