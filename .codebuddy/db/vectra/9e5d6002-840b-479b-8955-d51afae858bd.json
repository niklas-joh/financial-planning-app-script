{"chunk":7,"numChunks":11,"fileHash":"XFJnApqdW9F2W7KmE+N70wOSQSD9mzs9GMDBzeBLKO8=","filePath":"cline/clasp-pull/src/tests/testing-framework.js","content":"/**\nFinancialPlanner.Testing = (function() {\n  return {\n    runAll: function() {\n      resetResults_();\n      Logger.log(\"Starting test execution...\");\n      Logger.log(\"====================================\");\n\n      Object.keys(tests).forEach(moduleName => {\n        Logger.log(`\\n--- Testing Module: ${moduleName} ---`);\n        const moduleTests = tests[moduleName];\n        Object.keys(moduleTests).forEach(testName => {\n          try {\n            moduleTests[testName]();\n            logResult_(moduleName, testName, 'passed', `✓ ${testName}`);\n            Logger.log(`  ✓ ${testName}`);\n          } catch (error) {\n            logResult_(moduleName, testName, 'failed', `✗ ${testName} - ${error.message}`, error);\n            Logger.log(`  ✗ ${testName} - FAILED: ${error.message}${error.stack ? `\\n    Stack: ${error.stack}` : ''}`);\n          }\n        });\n      });\n\n      Logger.log(\"\\n====================================\");\n      Logger.log(\"Test Execution Summary:\");\n      Logger.log(`  Passed: ${results.passed}`);\n      Logger.log(`  Failed: ${results.failed}`);\n      Logger.log(`  Skipped: ${results.skipped}`);\n      Logger.log(`  Total: ${results.passed + results.failed + results.skipped}`);\n      Logger.log(\"====================================\");\n      \n      // For more detailed programmatic access if needed\n      return { ...results }; \n    },\n    /**\n     * Runs all tests for a specific module.\n     * @param {string} moduleName - The name of the module to test.\n     * @return {Object} An object containing the test results summary for the module.\n     */"}