{"chunk":20,"numChunks":54,"fileHash":"vN+W2tDiA59Daq+vJZZ4NvNU8baK6mDpzqFA2kTr3NY=","filePath":"cline/clasp-pull/src/services/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(utils, uiService, errorService, config) {\n  class FinancialAnalysisService {\n    addKeyMetricsSection(startRow) {\n      // Add Key Metrics header\n      this.analysisSheet.getRange(startRow, 1).setValue(\"Key Metrics\");\n      this.analysisSheet.getRange(startRow, 1, 1, 4) // Expanded to include description column\n        .setBackground(this.config.COLORS.UI.HEADER_BG)\n        .setFontWeight(\"bold\")\n        .setFontColor(this.config.COLORS.UI.HEADER_FONT)\n        .setHorizontalAlignment(\"center\");\n      startRow++;\n      // Create a metrics table\n      this.analysisSheet.getRange(startRow, 1, 1, 4) // Expanded to include description column\n        .setValues([[\"Metric\", \"Value\", \"Target\", \"Description\"]])\n        .setBackground(\"#F5F5F5\")\n        .setFontWeight(\"bold\")\n        .setHorizontalAlignment(\"center\");\n      // Set width for description column\n      this.analysisSheet.setColumnWidth(4, 300);\n      startRow++;\n      // Initialize arrays for batch processing\n      const metricsStartRow = startRow;\n      let currentMetricRow = 0;\n      // Arrays for batch processing\n      const metricValues = [];\n      const metricFormulas = [];\n      const metricTargets = [];\n      const metricDescriptions = [];\n      const metricBackgrounds = [];\n      const conditionalFormatRules = [];\n      // Consistent background color for all metrics\n      const metricBgColor = this.config.COLORS.UI.METRICS_BG;\n      // 1. Expenses/Income Ratio"}