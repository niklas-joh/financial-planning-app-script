{"chunk":22,"numChunks":25,"fileHash":"kS6Otb0ktf7SNGRgDc+bn8H5lrkmK9GeXCt+rLvCNP0=","filePath":"cline/clasp-pull/src/tests/settings-service.test.js","content":"/**\n(function() {\n  T.registerTest(\"SettingsService\", \"getBooleanValue should coerce values correctly\", function() {\n    setupMockSheet();\n    TestSettingsService.setValue(\"bool_true\", true);\n    TestSettingsService.setValue(\"bool_false\", false);\n    TestSettingsService.setValue(\"string_true\", \"true\");\n    TestSettingsService.setValue(\"string_false\", \"false\");\n    TestSettingsService.setValue(\"num_1\", 1);\n    TestSettingsService.setValue(\"num_0\", 0);\n    TestSettingsService.setValue(\"string_1\", \"1\");\n    TestSettingsService.setValue(\"string_0\", \"0\");\n    TestSettingsService.setValue(\"other_string\", \"hello\");\n\n    T.assertTrue(TestSettingsService.getBooleanValue(\"bool_true\", false), \"Boolean true should return true.\");\n    T.assertFalse(TestSettingsService.getBooleanValue(\"bool_false\", true), \"Boolean false should return false.\");\n    T.assertTrue(TestSettingsService.getBooleanValue(\"string_true\", false), \"String 'true' should return true.\");\n    T.assertFalse(TestSettingsService.getBooleanValue(\"string_false\", true), \"String 'false' should return false.\");\n    T.assertTrue(TestSettingsService.getBooleanValue(\"num_1\", false), \"Number 1 should return true.\");\n    T.assertFalse(TestSettingsService.getBooleanValue(\"num_0\", true), \"Number 0 should return false.\");\n     T.assertTrue(TestSettingsService.getBooleanValue(\"string_1\", false), \"String '1' should return true.\");\n    T.assertFalse(TestSettingsService.getBooleanValue(\"string_0\", true), \"String '0' should return false.\");\n    T.assertFalse(TestSettingsService.getBooleanValue(\"other_string\", false), \"Other string should return default (false).\");\n    T.assertTrue(TestSettingsService.getBooleanValue(\"nonexistent\", true), \"Nonexistent key should return default (true).\");\n  });"}