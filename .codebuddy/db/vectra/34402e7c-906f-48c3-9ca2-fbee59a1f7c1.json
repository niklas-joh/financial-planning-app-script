{"chunk":8,"numChunks":11,"fileHash":"XFJnApqdW9F2W7KmE+N70wOSQSD9mzs9GMDBzeBLKO8=","filePath":"cline/clasp-pull/src/tests/testing-framework.js","content":"/**\nFinancialPlanner.Testing = (function() {\n  return {\n    runModule: function(moduleName) {\n      resetResults_();\n      Logger.log(`Starting test execution for module: ${moduleName}...`);\n      Logger.log(\"====================================\");\n\n      if (!tests[moduleName]) {\n        Logger.log(`No tests found for module: ${moduleName}`);\n        Logger.log(\"====================================\");\n        return { ...results };\n      }\n\n      const moduleTests = tests[moduleName];\n      Object.keys(moduleTests).forEach(testName => {\n        try {\n          moduleTests[testName]();\n          logResult_(moduleName, testName, 'passed', `✓ ${testName}`);\n          Logger.log(`  ✓ ${testName}`);\n        } catch (error) {\n          logResult_(moduleName, testName, 'failed', `✗ ${testName} - ${error.message}`, error);\n          Logger.log(`  ✗ ${testName} - FAILED: ${error.message}${error.stack ? `\\n    Stack: ${error.stack}` : ''}`);\n        }\n      });\n\n      Logger.log(\"\\n====================================\");\n      Logger.log(`Test Execution Summary for ${moduleName}:`);\n      Logger.log(`  Passed: ${results.passed}`);\n      Logger.log(`  Failed: ${results.failed}`);\n      Logger.log(`  Skipped: ${results.skipped}`);\n      Logger.log(`  Total: ${results.passed + results.failed + results.skipped}`);\n      Logger.log(\"====================================\");\n      return { ...results };\n    },\n    // --- Assertion Helpers ---\n    /**\n     * Asserts that two values are strictly equal (===).\n     * @param {*} expected - The expected value.\n     * @param {*} actual - The actual value.\n     * @param {string} [message] - Optional message to display on failure.\n     */"}