{"chunk":5,"numChunks":6,"fileHash":"8a21GX7qSx60M5iWJrf+S3rUFkow0/KOQjvH6+pjsYw=","filePath":"cline/clasp-pull/src/tests/utils.test.js","content":"/**\n(function(T, U) { // T = Testing, U = Utils\n  T.registerTest(MODULE_NAME, \"getMonthName should handle invalid index (e.g., 12)\", function() {\n    // Assuming it returns an empty string or a specific error string for invalid indices\n    const result = U.getMonthName(12);\n    T.assertEquals(\"\", result, \"Invalid month index 12 should return empty string\"); \n    // Or: T.assertEquals(\"Invalid Month\", result, \"Invalid month index 12 should return 'Invalid Month'\");\n  });\n  T.registerTest(MODULE_NAME, \"getMonthName should handle invalid index (e.g., -1)\", function() {\n    const result = U.getMonthName(-1);\n    T.assertEquals(\"\", result, \"Invalid month index -1 should return empty string\");\n  });\n  // --- Tests for formatAsCurrency (Basic check, requires Mocks for SpreadsheetApp) ---\n  // Note: Testing functions interacting directly with SpreadsheetApp is harder without mocks.\n  // This is a placeholder showing the intent. More robust tests would need a mocking strategy.\n  T.registerTest(MODULE_NAME, \"formatAsCurrency should exist\", function() {\n     T.assertNotNull(U.formatAsCurrency, \"formatAsCurrency function should exist\");\n     T.assertEquals('function', typeof U.formatAsCurrency, \"formatAsCurrency should be a function\");\n  });\n  // --- Tests for formatAsPercentage (Basic check) ---\n   T.registerTest(MODULE_NAME, \"formatAsPercentage should exist\", function() {\n     T.assertNotNull(U.formatAsPercentage, \"formatAsPercentage function should exist\");\n     T.assertEquals('function', typeof U.formatAsPercentage, \"formatAsPercentage should be a function\");\n  });\n  // --- Tests for getOrCreateSheet (Basic check, requires Mocks) ---"}