{"chunk":19,"numChunks":31,"fileHash":"p7QjnH7owYj6gI9sV03tmQN28z3j87qqpbMEZWUm4gw=","filePath":"src/tests/dropdowns.test.js","content":"/**\n(function() {\n   const TestDropdownService = (function(utils, uiService, errorService, config) {\n        function handleCategoryEdit(sheet, row, typeCategoryToSubCategories) { const typeCell = sheet.getRange(row, DROPDOWN_CONFIG.COLUMNS.TYPE); const categoryCell = sheet.getRange(row, DROPDOWN_CONFIG.COLUMNS.CATEGORY); const subCategoryCell = sheet.getRange(row, DROPDOWN_CONFIG.COLUMNS.SUB_CATEGORY); const type = typeCell.getValue(); const category = categoryCell.getValue(); const oldSubCategoryValue = subCategoryCell.getValue(); if (type && category && category !== DROPDOWN_CONFIG.UI.PLACEHOLDER_TEXT) { const key = `${type}${DROPDOWN_CONFIG.KEY_SEPARATOR}${category}`; const subCategories = typeCategoryToSubCategories[key] || []; setDropdownValidation(subCategoryCell, subCategories); if (oldSubCategoryValue && (subCategories.length === 0 || !subCategories.includes(oldSubCategoryValue))) { subCategoryCell.clearContent(); highlightPending(subCategoryCell); } else if (subCategories.length > 0 && !oldSubCategoryValue) { highlightPending(subCategoryCell); } } else { subCategoryCell.clearContent().clearDataValidations(); } clearPlaceholderIfNeeded(categoryCell); if (subCategoryCell.getValue() !== DROPDOWN_CONFIG.UI.PLACEHOLDER_TEXT && subCategoryCell.getValue() !== \"\") { clearHighlight(subCategoryCell); } }\n        function handleSubCategoryEdit(sheet, row) { const subCategoryCell = sheet.getRange(row, DROPDOWN_CONFIG.COLUMNS.SUB_CATEGORY); clearPlaceholderIfNeeded(subCategoryCell); clearHighlight(subCategoryCell); }"}