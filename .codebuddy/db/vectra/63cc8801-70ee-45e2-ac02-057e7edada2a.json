{"chunk":31,"numChunks":37,"fileHash":"p+NTwC3zq/FPOmXxcPSDB6QbnKDyg9Iv5YKb19s7AmA=","filePath":"src/services/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(utils, uiService, errorService, config) {\n  class FinancialAnalysisService {\n    addExpenseCategoriesSection(startRow) {\n      if (this.data.expenseCategories && this.data.expenseCategories.length > 0) {\n        const sortedCategories = [...this.data.expenseCategories].filter(c => !c.subcategory).sort((a, b) => b.amount - a.amount);\n        sortedCategories.forEach(cat => {\n          let targetRate = this.config.TARGET_RATES.DEFAULT;\n          if (cat.type === \"Essentials\") targetRate = this.config.TARGET_RATES.ESSENTIALS;\n          else if (cat.type === \"Wants/Pleasure\") targetRate = this.config.TARGET_RATES.WANTS_PLEASURE || this.config.TARGET_RATES.WANTS;\n          else if (cat.type === \"Extra\") targetRate = this.config.TARGET_RATES.EXTRA;\n          \n          categoryData.push([\n            cat.category, cat.type, cat.amount,\n            (this.totals.income.averageRef && this.totals.income.average > 0) ? `=C${startRow + currentCategoryRow}/${this.totals.income.averageRef}` : \"N/A\",\n            targetRate,\n            `=D${startRow + currentCategoryRow}-E${startRow + currentCategoryRow}`\n          ]);\n          conditionalFormatRules.push(SpreadsheetApp.newConditionalFormatRule().whenFormulaSatisfied(`=F${startRow + currentCategoryRow}>0`).setBackground(\"#FFCDD2\").setRanges([this.analysisSheet.getRange(startRow + currentCategoryRow, 6)]).build());\n          currentCategoryRow++;\n        });"}