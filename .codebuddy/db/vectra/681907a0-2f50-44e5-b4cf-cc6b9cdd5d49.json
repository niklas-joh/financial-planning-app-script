{"chunk":0,"numChunks":3,"fileHash":"1ScswXrXE2PXlX0dbedgziP8h8GyRib1yP+ZOU4KwWQ=","filePath":"cline/github_cli_workflow.md","content":"# GitHub CLI Workflow Guide\n\nThis guide provides instructions on how to use GitHub CLI (`gh`) for managing issues, branches, commits, and more in this repository.\n\n## 1. Managing GitHub Issues\n\n### Creating Issues\n```bash\n# Create a new issue with title and body\ngh issue create --title \"Issue title\" --body \"Issue description\"\n\n# Create with labels and assignees\ngh issue create --title \"Fix dropdown bug\" --body \"The dropdown menu isn't working correctly\" --label \"bug,priority\" --assignee \"niklas-joh\"\n```\n\n### Viewing Issues\n```bash\n# List open issues\ngh issue list\n\n# View a specific issue\ngh issue view ISSUE_NUMBER\n```\n\n### Closing Issues\n```bash\n# Close an issue\ngh issue close ISSUE_NUMBER\n\n# Close with comment\ngh issue close ISSUE_NUMBER --comment \"Fixed in latest commit\"\n```\n\n## 2. Branch Management\n\n### Creating Branches\n```bash\n# Create and checkout a new branch\ngit checkout -b branch-name\n\n# Create branch from an issue\ngh issue develop ISSUE_NUMBER -b branch-name\n```\n\n### Listing Branches\n```bash\n# List all branches\ngit branch\n\n# List remote branches\ngit branch -r\n```\n\n## 3. Committing Code\n\n```bash\n# Stage all changes\ngit add .\n\n# Stage specific files\ngit add file1.js file2.js\n\n# Commit with message\ngit commit -m \"Fix: Resolve dropdown selection issue\"\n```\n\n### Commit Message Best Practices\n\n1. **Use a structured format**:\n   ```\n   <type>: <short summary>\n   \n   [optional body]\n   \n   [optional footer]\n   ```\n\n2. **Common types**:\n   - `feat`: A new feature\n   - `fix`: A bug fix\n   - `docs`: Documentation changes\n   - `style`: Changes that don't affect code meaning (formatting, etc.)\n   - `refactor`: Code changes that neither fix a bug nor add a feature\n   - `perf`: Performance improvements\n   - `test`: Adding or correcting tests\n"}