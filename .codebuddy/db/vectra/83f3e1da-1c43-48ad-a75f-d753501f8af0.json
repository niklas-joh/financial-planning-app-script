{"chunk":5,"numChunks":10,"fileHash":"+Q+vXguz9tr2JmjJw0iW50US8OUoYEygXE3BXq/tTaM=","filePath":"src/services/cache-service.js","content":"/**\nconst CacheServiceModule = (function() {\n  /**\n   * Constructor for the CacheServiceModule.\n   * @param {object} configInstance - An instance of ConfigModule.\n   * @param {object} errorServiceInstance - An instance of ErrorServiceModule.\n   * @constructor\n   */\n  function CacheServiceModuleConstructor(configInstance, errorServiceInstance) {\n    this.config = configInstance;\n    this.errorService = errorServiceInstance;\n    this.memoryCache = {}; // In-memory cache for ultra-fast access\n  }\n  // Private helper methods (prefixed with _ and attached to prototype or defined in closure)\n  CacheServiceModuleConstructor.prototype._isCacheEnabled = function() {\n    try {\n      return this.config.getSection('CACHE').ENABLED === true;\n    } catch (e) {\n      this.errorService.log(this.errorService.create('Failed to read CACHE.ENABLED config', { originalError: e, severity: 'medium' }));\n      return false; // Default to cache disabled if config is broken\n    }\n  };\n  CacheServiceModuleConstructor.prototype._getDefaultExpirySeconds = function() {\n    try {\n      return this.config.getSection('CACHE').EXPIRY_SECONDS || 3600; // Default to 1 hour\n    } catch (e) {\n      this.errorService.log(this.errorService.create('Failed to read CACHE.EXPIRY_SECONDS config', { originalError: e, severity: 'medium' }));\n      return 3600; // Default to 1 hour if config is broken\n    }\n  };\n  CacheServiceModuleConstructor.prototype._generateNamespacedKey = function(key) {\n    return `fp_${key}`;\n  };\n  // Public API methods"}