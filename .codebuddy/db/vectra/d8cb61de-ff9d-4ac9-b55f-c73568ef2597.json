{"chunk":6,"numChunks":12,"fileHash":"JN8zrR3RLBMehoajMVV4kRdQBPjVa7ydJZnM5WDgr0E=","filePath":"src/services/formula-builder.js","content":"/**\nconst FormulaBuilderModule = (function() {\n  FormulaBuilderModuleConstructor.prototype.buildMonthlySumFormula = function(params) {\n    const { sumRange, criteria, sharedDivisor } = params;\n    \n    const criteriaStrings = criteria.map(criterion => {\n      if (criterion.type === 'date') {\n        return this._buildDateCriteriaString(criterion.range, criterion.operator || '=', criterion.value);\n      } else if (criterion.operator) {\n        return this._buildCriteriaOperatorString(criterion.range, criterion.operator, criterion.value);\n      }\n      return this._buildCriteriaString(criterion.range, criterion.value);\n    });\n    \n    const sumifs = `SUMIFS(${sumRange},${criteriaStrings.join(',')})`;\n    \n    if (sharedDivisor) {\n      return `(${sumifs})/${sharedDivisor}`;\n    }\n    \n    return sumifs;\n  };\n  /**\n   * Builds a SUM formula for row totals\n   * @param {string} startCol Starting column letter\n   * @param {string} endCol Ending column letter\n   * @param {number} row Row number\n   * @returns {string} Complete formula string\n   */\n  FormulaBuilderModuleConstructor.prototype.buildRowTotalFormula = function(startCol, endCol, row) {\n    return `=SUM(${startCol}${row}:${endCol}${row})`;\n  };\n  /**\n   * Builds an AVERAGE formula for row averages\n   * @param {string} startCol Starting column letter\n   * @param {string} endCol Ending column letter\n   * @param {number} row Row number\n   * @returns {string} Complete formula string\n   */\n  FormulaBuilderModuleConstructor.prototype.buildRowAverageFormula = function(startCol, endCol, row) {\n    return `=AVERAGE(${startCol}${row}:${endCol}${row})`;\n  };"}