{"chunk":11,"numChunks":31,"fileHash":"p7QjnH7owYj6gI9sV03tmQN28z3j87qqpbMEZWUm4gw=","filePath":"src/tests/dropdowns.test.js","content":"/**\n(function() {\n  // --- Mock Other Dependencies ---\n  const mockConfig = {\n    _sheets: { TRANSACTIONS: \"Transactions\", DROPDOWNS: \"Dropdowns\" },\n    get: function() { return { SHEETS: this._sheets }; }, // Simplified get\n    getSection: function(section) { if (section === 'SHEETS') return this._sheets; return {}; }\n  };\n  const mockUtils = { /* Mock specific utils if needed, assume none for now */ };\n  const mockUiService = {\n      showLoadingSpinner: function(msg) { /* console.log(\"UI Mock:\", msg); */ },\n      hideLoadingSpinner: function() { /* console.log(\"UI Mock: Hide Spinner\"); */ },\n      showSuccessNotification: function(msg) { lastToast = { message: msg, title: \"Success\" }; }\n  };\n  const mockErrorService = {\n      handle: function(error, msg) { lastHandledError = { error, msg }; console.error(\"ERROR SERVICE MOCK:\", msg, error); },\n      create: function(msg, details) { const e = new Error(msg); e.details = details; e.name=\"FinancialPlannerError\"; return e; },\n      log: function(error) { console.log(\"ErrorService Mock Log:\", error.message); }\n  };\n  // --- Test Suite Setup ---\n   // Redefine DropdownService with mocks"}