{"chunk":32,"numChunks":36,"fileHash":"5PxeaT4n9kgvALpAj5B1jgQlallPIdU12UlI5e4vOJw=","filePath":"src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) {\n  class FinancialOverviewBuilder {\n    constructor() {\n      this.spreadsheet = null; this.overviewSheet = null; this.transactionSheet = null;\n      this.showSubCategories = true; this.transactionData = null; this.columnIndices = null;\n      this.categoryCombinations = null; this.groupedCombinations = null; this.lastContentRowIndex = 0;\n    }\n    initialize() {\n      this.spreadsheet = SpreadsheetApp.getActiveSpreadsheet(); const sheetNames = config.getSection('SHEETS');\n      this.overviewSheet = utils.getOrCreateSheet(this.spreadsheet, sheetNames.OVERVIEW);\n      clearSheetContent(this.overviewSheet);\n      this.transactionSheet = this.spreadsheet.getSheetByName(sheetNames.TRANSACTIONS);\n      if (!this.transactionSheet) throw errorService.create(`Required sheet \"${sheetNames.TRANSACTIONS}\" not found`, { severity: \"high\" });\n      this.showSubCategories = getUserPreference(\"ShowSubCategories\", true); return this;\n    }\n    processData() {\n      const { data, indices } = getProcessedTransactionData(this.transactionSheet);\n      this.transactionData = data; this.columnIndices = indices;\n      this.categoryCombinations = cacheService.get(config.getSection('CACHE').KEYS.CATEGORY_COMBINATIONS,\n        () => getUniqueCategoryCombinations(this.transactionData, this.columnIndices.type, this.columnIndices.category, this.columnIndices.subcategory, this.showSubCategories));\n      this.groupedCombinations = cacheService.get(config.getSection('CACHE').KEYS.GROUPED_COMBINATIONS,\n        () => groupCategoryCombinations(this.categoryCombinations));\n      return this;\n    }\n    setupHeader() { setupHeaderRow(this.overviewSheet, this.showSubCategories); return this; }"}