{"chunk":23,"numChunks":53,"fileHash":"sZNtFtlzBgOlJ3052pxcb3tYBWiJBgfxmxjkXMyDhtg=","filePath":"cline/clasp-verify/src/services/finance_overview.js","content":"/**\nFinancialPlanner.FinanceOverview = (function(utils, uiService, cacheService, errorService, config, settingsService, analysisServiceInstance) { // Added settingsService and analysisServiceInstance\n  /**\n   * Adds a subtotal row for a specific transaction type to the overview sheet.\n   * This row sums up the monthly totals for all categories under that type.\n   * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - The overview sheet object.\n   * @param {string} type - The name of the transaction type for which the subtotal is being calculated.\n   * @param {number} rowIndex - The 1-based row index where the subtotal row should be inserted.\n   * @param {number} rowCount - The number of category/sub-category rows that belong to this type (used for SUM range).\n   * @return {number} The next available row index after inserting the subtotal row.\n   * @private\n   */\n  function addTypeSubtotalRow(sheet, type, rowIndex, rowCount) {\n    // Get colors for this type\n    const typeColors = getTypeColors(type);\n    const headers = config.getSection('HEADERS');\n    \n    // Add subtotal for this type\n    sheet.getRange(rowIndex, 1).setValue(`Total ${type}`);\n    sheet.getRange(rowIndex, 1, 1, headers.length)\n      .setBackground(typeColors.BG)\n      .setFontWeight(\"bold\")\n      .setFontColor(typeColors.FONT);\n    \n    // Add subtotal formulas for each month column using batch operations\n    const formulas = [];\n    const startRow = rowIndex - rowCount;\n    const endRow = rowIndex - 1;\n    \n    for (let monthCol = 5; monthCol <= 17; monthCol++) {\n      formulas.push(`=SUM(${utils.columnToLetter(monthCol)}${startRow}:${utils.columnToLetter(monthCol)}${endRow})`);\n    }\n    \n    // Set all formulas at once for better"}