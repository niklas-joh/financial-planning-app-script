{"chunk":30,"numChunks":54,"fileHash":"vN+W2tDiA59Daq+vJZZ4NvNU8baK6mDpzqFA2kTr3NY=","filePath":"cline/clasp-verify/src/services/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(utils, uiService, errorService, config) {\n  class FinancialAnalysisService {\n    addKeyMetricsSection(startRow) {\n      if (currentMetricRow > 0) {\n        // Set metric names\n        if (metricValues.length > 0) {\n          this.analysisSheet.getRange(startRow, 1, metricValues.length, 1).setValues(metricValues);\n        }\n        // Set formulas\n        if (metricFormulas.length > 0) {\n          this.analysisSheet.getRange(startRow, 2, metricFormulas.length, 1).setFormulas(metricFormulas);\n        }\n        // Set targets\n        if (metricTargets.length > 0) {\n          this.analysisSheet.getRange(startRow, 3, metricTargets.length, 1).setValues(metricTargets);\n        }\n        // Set descriptions\n        if (metricDescriptions.length > 0) {\n          this.analysisSheet.getRange(startRow, 4, metricDescriptions.length, 1).setValues(metricDescriptions);\n        }\n        // Set backgrounds\n        if (metricBackgrounds.length > 0) {\n          this.analysisSheet.getRange(startRow, 1, metricBackgrounds.length, 4).setBackgrounds(\n            metricBackgrounds.map(bg => [bg[0], bg[0], bg[0], bg[0]])\n          );\n        }\n        // Format percentage cells\n        const percentageRows = metricValues.map((_, i) => startRow + i).filter(row => \n          this.analysisSheet.getRange(row, 1).getValue() !== \"Monthly Net Cash Flow\" && \n          this.analysisSheet.getRange(row, 1).getValue() !== \"\"\n        );\n        if (percentageRows.length > 0) {\n          percentageRows.forEach(row => {\n            utils.formatAsPercentage(this.analysisSheet.getRange(row, 2, 1, 2));\n          });\n        }\n"}