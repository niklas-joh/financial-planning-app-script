{"chunk":6,"numChunks":35,"fileHash":"KnGRZfWKIc39Wbh8b5JI+OtSMVtmab0GI6OHguWwGLg=","filePath":"src/features/financial-analysis/financial_analysis.js","content":"/**\nFinancialPlanner.FinancialAnalysisService = (function(\n) {\n  class DataExtractor {\n    constructor(overviewSheet) {\n      this.sheet = overviewSheet;\n      this.data = this.sheet.getDataRange().getValues();\n      this.overviewSheetName = `'${config.getSection('SHEETS').OVERVIEW}'`;\n    }\n    extractMetrics() {\n      const metrics = {\n        income: this.findTotalRow('Total Income'),\n        expenses: this.findExpenseRows(),\n        savings: this.findTotalRow('Total Savings'),\n        categories: this.extractCategories()\n      };\n      \n      // Find specific expense types\n      metrics.essentials = this.findTotalRow('Essentials');\n      metrics.wantsPleasure = this.findTotalRow('Wants/Pleasure');\n      metrics.extra = this.findTotalRow('Extra');\n      \n      return metrics;\n    }\n    findTotalRow(label) {\n      const totalColLetter = utils.columnToLetter(17);\n      const averageColLetter = utils.columnToLetter(18);\n      const monthlyStartCol = utils.columnToLetter(5);\n      const monthlyEndCol = utils.columnToLetter(16);\n      \n      for (let i = 0; i < this.data.length; i++) {\n        if (this.data[i][0] === label) {\n          const rowNum = i + 1;\n          return {\n            row: rowNum,\n            total: this.data[i][16],\n            average: this.data[i][17],\n            totalRef: `${this.overviewSheetName}!${totalColLetter}${rowNum}`,\n            averageRef: `${this.overviewSheetName}!${averageColLetter}${rowNum}`,\n            monthlyValuesRangeRef: `${this.overviewSheetName}!${monthlyStartCol}${rowNum}:${monthlyEndCol}${rowNum}`\n          };\n        }\n      }\n      return null;\n    }"}