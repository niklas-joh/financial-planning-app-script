{"chunk":19,"numChunks":25,"fileHash":"NFeCXCcs54GgVRSaoZ7YUMS8I/hASRpntpW0s0paeLI=","filePath":"cline/clasp-pull/src/tests/cache-service.test.js","content":"/**\n(function() {\n  T.registerTest(\"CacheService\", \"get should return value from memory cache on hit\", function() {\n     setupTestState();\n     let computeCount = 0;\n     const key = \"mem_hit_key\";\n     const expectedValue = \"from memory\";\n     const computeFunc = () => { computeCount++; return \"should not compute\"; };\n     const namespacedKey = `fp_${key}`;\n\n     // Pre-populate memory cache\n     TestCacheService._getMemoryCache()[namespacedKey] = { value: expectedValue, expiry: Date.now() + 10000 };\n\n     const result = TestCacheService.get(key, computeFunc);\n\n     T.assertEquals(0, computeCount, \"Compute function should not be called on memory hit.\");\n     T.assertEquals(expectedValue, result, \"Should return the value from memory cache.\");\n  });"}