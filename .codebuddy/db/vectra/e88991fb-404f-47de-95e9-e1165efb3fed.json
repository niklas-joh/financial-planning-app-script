{"chunk":11,"numChunks":14,"fileHash":"m+ILWFttSzMQvZs28WTEsXBRFJ7fzh2IK0bjpCXfnaI=","filePath":"cline/clasp-verify/src/core/cache-service.js","content":"/**\nFinancialPlanner.CacheService = (function(config) {\n  return {\n    invalidate: function(key) {\n      if (!isCacheEnabled()) return;\n      \n      const namespacedKey = generateNamespacedKey(key);\n      \n      // Remove from memory cache\n      delete memoryCache[namespacedKey];\n      \n      // Remove from script cache\n      try {\n        const cache = CacheService.getScriptCache();\n        cache.remove(namespacedKey);\n      } catch (error) {\n        console.warn(`Failed to invalidate cache for key ${key}:`, error);\n      }\n    },\n    /**\n     * Invalidates all cache entries in the memory cache that start with the given prefix.\n     * Note: This currently only affects the in-memory cache due to limitations\n     * with Google Apps Script's CacheService prefix removal.\n     * Does nothing if caching is disabled.\n     *\n     * @param {string} prefix The prefix of keys to invalidate (e.g., \"user_settings_\").\n     *\n     * @example\n     * FinancialPlanner.CacheService.invalidateByPrefix('user_specific_data_');\n     */\n    invalidateByPrefix: function(prefix) {\n      if (!isCacheEnabled()) return;\n      \n      // Remove from memory cache\n      const namespacedPrefix = generateNamespacedKey(prefix);\n      \n      Object.keys(memoryCache).forEach(key => {\n        if (key.startsWith(namespacedPrefix)) {\n          delete memoryCache[key];\n        }\n      });\n      \n      // Note: CacheService doesn't provide a way to remove by prefix,\n      // so we need to track keys with the same prefix separately if needed\n    },\n    /**\n     * Invalidates all known cache entries.\n     * This clears the entire in-memory cache and attempts to remove known keys\n     * (defined in `config.getSection('CACHE').KEYS`) from the script cache.\n     * Does nothing if caching is disabled.\n     *\n     * @example\n     * FinancialPlanner.CacheService.invalidateAll();\n"}